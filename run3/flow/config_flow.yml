# Description: Configuration file for the flow analysis of D mesons, ordered as follows:
# 1. Global info
# 2. Fit options
# 3. BDT cut
# 4. Optional settings
# 5. Used for computing pT weights
# global info (do not change)
axes: {mass: 0,
       pt: 1,
       cent: 2,
       sp: 5,
       deltaphi: 4,
       phi: 3,
       bdt_bkg: 6,
       bdt_sig: 7}

# cut variation general configurables
centrality: 'k3040' # centrality class
res_file: '/path/to/resofile.root' 
out_dir: '/path/to/output/dir'
suffix: 'suffix'
anresdir: [
    "path/to/AnRes1.root",
    "path/to/AnRes2.root",
    "path/to/AnRes3.root",
    "path/to/AnRes4.root",
    "path/to/AnRes5.root"
]
vn_method: 'sp'
nworkers: 1 # workers to parallelize projections, efficiency and fitting

harmonic: 2 # 2: v2, 3: v3, etc.

# pt bins
ptmins: [1, 2, 3, 4, 5, 6] 
ptmaxs: [2, 3, 4, 5, 6, 7]

# inv_mass_bins (one for each pt bin)
inv_mass_bins: [[1.74, 1.78, 1.82, 1.84, 1.85, 1.86, 1.87, 1.88, 1.89, 1.90, 1.92, 1.96, 2.00],
                [1.74, 1.78, 1.82, 1.84, 1.85, 1.86, 1.87, 1.88, 1.89, 1.90, 1.92, 1.96, 2.00],
                [1.74, 1.78, 1.82, 1.84, 1.85, 1.86, 1.87, 1.88, 1.89, 1.90, 1.92, 1.96, 2.00],
                [1.74, 1.78, 1.82, 1.84, 1.85, 1.86, 1.87, 1.88, 1.89, 1.90, 1.92, 1.96, 2.00],
                [1.74, 1.78, 1.82, 1.84, 1.85, 1.86, 1.87, 1.88, 1.89, 1.90, 1.92, 1.96, 2.00],
                [1.74, 1.78, 1.82, 1.84, 1.85, 1.86, 1.87, 1.88, 1.89, 1.90, 1.92, 1.96, 2.00],
                [1.74, 1.78, 1.82, 1.84, 1.85, 1.86, 1.87, 1.88, 1.89, 1.90, 1.92, 1.96, 2.00],
                [1.74, 1.78, 1.82, 1.84, 1.85, 1.86, 1.87, 1.88, 1.89, 1.90, 1.92, 1.96, 2.00],
                [1.74, 1.78, 1.82, 1.84, 1.85, 1.86, 1.87, 1.88, 1.89, 1.90, 1.92, 1.96, 2.00],]
use_inv_mass_bins: false # use binning in invariant mass distribution, neglects inv_mass_bins (default: false)

# ep/sp subevents
detA: 'FT0c'
detB: 'FV0a'
detC: 'TPCpos'

#________________________________________________________________________________________________________________________
# fit options
Dmeson: 'Dplus'
FixSigma: 0
Sigma: [0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02]
FixSigmaFromFile: ''
SigmaFile: ''
SigmaMultFactor: 1.
FixMean: 0
MeanFile: ''
MassMin: [ 1.74, 1.74, 1.74, 1.74, 1.74, 1.74, 1.74, 1.74, 1.74, 1.74, 1.74, 1.74, 1.74, 1.74, 1.74, 1.74, 1.70, 1.70, 1.70, 1.70, 1.70 ] 
MassMax: [ 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00 ]
Rebin: [20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
InclSecPeak: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
SigmaSecPeak: []
SigmaFileSecPeak: ''
SigmaMultFactorSecPeak: 1.
FixSigmaToFirstPeak: 0
UseLikelihood: 1
BkgFunc: [ 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo' ]
SgnFunc: [ 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus' ]
BkgFuncVn: ['kLin', 'kLin', 'kPol2', 'kLin', 'kLin', 'kLin', 'kLin', 'kLin', 'kLin', 'kLin', 'kLin', 'kLin', 'kLin', 'kLin', 'kLin', 'kLin', 'kLin', 'kLin', 'kLin', 'kLin', 'kLin' ]
ReflFunc: "2gaus"
FixSigmaRatio: 0 # used only if SgnFunc = k2GausSigmaRatioPar
SigmaRatioFile: ""
BoundMean: 0 # 0: Do not set limits on mean range, 1: the mean is set to be between MassMin[i] and MassMax[i]

#________________________________________________________________________________________________________________________
# bdt cut
apply_btd_cuts: false # apply bdt cuts
bkg_ml_cuts: [0.08, 0.08, 0.08, 0.08, 0.08, 0.08] # max probability for bkg, one for each pt bin
sig_ml_cuts: [0.6, 0.6, 0.6, 0.6, 0.6, 0.6]       # min probability for sig, one for each pt bin

# cut variation
cut_variation:
       corr_bdt_cut:
              bkg_max: [0.001, 0.001, 0.001, 0.001, 0.001, 0.002, 0.002, 0.01, 0.08, 0.1]
              sig: # the max value is not contained in the range
                     min: [0.1, 0.2, 0.15, 0.15, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]
                     max: [0.92, 0.92, 0.92, 0.92, 0.92, 0.92, 0.92, 0.92, 0.92, 0.92]
                     step: [0.15, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04]
       uncorr_bdt_cut:
            bkg_max: # max probability for bkg, one for each pt bin
                - [0.001, 0.001, 0.001, 0.008, 0.0006] # pt 1
                - [0.001, 0.001, 0.001, 0.008, 0.0006] # pt 2
                - [0.001, 0.001, 0.001, 0.008, 0.0006] # pt 3
                - [0.001, 0.001, 0.001, 0.008, 0.0006] # pt 4
                - [0.001, 0.001, 0.001, 0.008, 0.0006] # pt 5
                - [0.001, 0.001, 0.001, 0.008, 0.0006] # pt 6
            sig:
                - min: [0.00, 0.30, 0.45, 0.70, 0.97] # min pt 1
                  max: [0.30, 0.45, 0.70, 0.97, 1.00] # max pt 1
                - min: [0.00, 0.30, 0.45, 0.70, 0.97] # min pt 2
                  max: [0.30, 0.45, 0.70, 0.97, 1.00] # max pt 2
                - min: [0.00, 0.30, 0.45, 0.70, 0.97] # min pt 3
                  max: [0.30, 0.45, 0.70, 0.97, 1.00] # max pt 3
                - min: [0.00, 0.30, 0.45, 0.70, 0.97] # min pt 4
                  max: [0.30, 0.45, 0.70, 0.97, 1.00] # max pt 4
                - min: [0.00, 0.30, 0.45, 0.70, 0.97] # min pt 5
                  max: [0.30, 0.45, 0.70, 0.97, 1.00] # max pt 5
                - min: [0.00, 0.30, 0.45, 0.70, 0.97] # min pt 6
                  max: [0.30, 0.45, 0.70, 0.97, 1.00] # max pt 6

minimisation:
    correlated: true # true --> fully correlated, false --> fully uncorrelated
    combined: False
    # `output_dir` in run_cutvar.sh
    correlatedPath: 'path/to/correlated'
    #skip_cuts: [    # index of the specific cuts to skip for each pt bin
    #            [], # pt 1
    #            [], # pt 2
    #            [], # pt 3
    #            [], # pt 4
    #            [], # pt 5
    #            [], # pt 6
    #]
    #systematics: ['minus3', 'even', 'odd', 'random']

# efficiency
eff_filename: 'task_output.root'

#________________________________________________________________________________________________________________________
# optional settings
### path of pre-processed AnalysisResults files 
skim_out_dir: '/Users/mcosti/Analysis/Datasets/3050/skim3040bkgstrict'

### components distribution of v2
DrawVnComps: false  # draw single terms of vn function

### D0
enableRef: false #reflection for D0. 
# if `enableRef` is set to `true`,  and `ReflFile` is empty, then `ReflFile` will be aotumatically filled.
# if `ReflFile` is filled, then it will use the filled one
reflFile: ''

### Dplus correlated bkg template
IncludeKDETempls: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]  # boolean flag to include templates or not
FromGrid: false # compute templates from TemplsInputs, else take them from file with FromFile flag
# To add more templates, use [part1, ... ,partN]
TemplsFlags: [2]  # flag of flagMcDecayRec to query the dataframe from which the KDE is obtained
TemplsInputs: '/Users/mcosti/Analysis/Datasets/Templates/AO2D_325626.root'  # input AODs for templates
AnchorTemplsMode: 2   # 0 to leave all templates free, 1 to anchor with respect to the first, 2 to anchor with respect to signal
TemplsNames: ["DsKKPi", "DplusKKPi"]  # names to save the templates in files
TemplsTreeNames: ['O2hfcanddplite']   # list of tables (they will be joined) to use to extract KDEs
SignalQuery: 'abs(fFlagMcMatchRec) == 1'  # query on tree to extract signal
TemplsQueries: ['abs(fFlagMcMatchRec) == 4 and abs(fFlagMcDecayChanRec) <= 2', 'abs(fFlagMcMatchRec) == 4 and abs(fFlagMcDecayChanRec) > 2'] # queries for corr bkgs.
WeightsFile: '/home/mdicosta/FlowDplus/FinalResults/templs_from_histo_parallel/weights.root' # path to store the relative weights of templates


# init weights for mass templates and vn of templates
InitWeights: [[500], [500], [500], [500], [500], [500], [500], [500], [500], [500], [500], [500], [500], [500], [500]]
MinWeights: [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0],]
MaxWeights: [[1000], [1000], [1000], [1000], [1000], [1000], [1000], [1000], [1000], [1000], [1000], [1000], [1000], [1000], [1000]]
FixVnTemplToSgn: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
VnInitWeights: [[0.1], [0.1], [0.1], [0.1], [0.1], [0.1], [0.1], [0.1], [0.1], [0.1], [0.1], [0.1], [0.1], [0.1], [0.1]]
VnMinWeights: [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]
VnMaxWeights: [[0.2], [0.2], [0.2], [0.2], [0.2], [0.2], [0.2], [0.2], [0.2], [0.2], [0.2], [0.2], [0.2], [0.2], [0.2]]
# InitBkg: [[initval_par0_ptbin0, lowlim_par0_ptbin0, upplim_par0_ptbin0], [initval_par1_ptbin0, lowlim_par1_ptbin0, upplim_par1_ptbin0]],[empty if no initialization]]
InitBkg: [[],[],[],[],[],[],[],[],[],[],[],[],[]]

#_______________________________________________________________________________________________________________________
# used for computting pT weights
Bspecie: Ball # only surport for Ball and BsBmix, empty means no B pt weights

rebin: 1
smooth: 100

shapes:
    D:
        # fonll is mandatory
        fonll: /path/to/fonll_pythia_beautyFFee_charmhadrons_5dot5tev_y0dot5.root
        tamu:
              enabled: true
              file: /path/to/DmesonAnalysis/models/tamu/PromptD0_TAMU_RAA_5TeV_3050.txt
        #TODO: data shape for Ds?
    B:
        # fonll is mandatory
        fonll: /path/to/fonll_pythia_beautyFFee_charmhadrons_5dot5tev_y0dot5.root
        tamu:
            enabled: true
            file: 
                B: /path/to/DmesonAnalysis/models/tamu/B_TAMU_RAA_5TeV_3050.txt
                Bs: ''

# a given path to the weights, used for finer centrality binning
ptWeights_path: ''
