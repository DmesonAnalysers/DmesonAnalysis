# global info (do not change)
axes: {mass: 0,
       pt: 1,
       cent: 2,
       sp: 5,
       deltaphi: 4,
       phi: 3,
       bdt_bkg: 6,
       bdt_sig: 7}

harmonic: 2 # 2: v2, 3: v3, etc.

# pt bins
ptmins: [1, 2, 3, 4, 5, 6] 
ptmaxs: [2, 3, 4, 5, 6, 7]

# inv_mass_bins (one for each pt bin)
inv_mass_bins: [[1.74, 1.78, 1.82, 1.84, 1.85, 1.86, 1.87, 1.88, 1.89, 1.90, 1.92, 1.96, 2.00],
                [1.74, 1.78, 1.82, 1.84, 1.85, 1.86, 1.87, 1.88, 1.89, 1.90, 1.92, 1.96, 2.00],
                [1.74, 1.78, 1.82, 1.84, 1.85, 1.86, 1.87, 1.88, 1.89, 1.90, 1.92, 1.96, 2.00],
                [1.74, 1.78, 1.82, 1.84, 1.85, 1.86, 1.87, 1.88, 1.89, 1.90, 1.92, 1.96, 2.00],
                [1.74, 1.78, 1.82, 1.84, 1.85, 1.86, 1.87, 1.88, 1.89, 1.90, 1.92, 1.96, 2.00],
                [1.74, 1.78, 1.82, 1.84, 1.85, 1.86, 1.87, 1.88, 1.89, 1.90, 1.92, 1.96, 2.00],
                [1.74, 1.78, 1.82, 1.84, 1.85, 1.86, 1.87, 1.88, 1.89, 1.90, 1.92, 1.96, 2.00],
                [1.74, 1.78, 1.82, 1.84, 1.85, 1.86, 1.87, 1.88, 1.89, 1.90, 1.92, 1.96, 2.00],
                [1.74, 1.78, 1.82, 1.84, 1.85, 1.86, 1.87, 1.88, 1.89, 1.90, 1.92, 1.96, 2.00],]
use_inv_mass_bins: false # use binning in invariant mass distribution, neglects inv_mass_bins (default: false)


# bdt cut
apply_btd_cuts: false # apply bdt cuts
bkg_ml_cuts: [0.08, 0.08, 0.08, 0.08, 0.08, 0.08] # max probability for bkg, one for each pt bin
sig_ml_cuts: [0.6, 0.6, 0.6, 0.6, 0.6, 0.6]       # min probability for sig, one for each pt bin


# ep/sp subevents
detA: 'FT0c'
detB: 'FT0a'
detC: 'TPCpos'

# fit options
Dmeson: 'Dplus'
FixSigma: 0
Sigma: [0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02]
FixSigmaFromFile: ''
SigmaFile: ''
SigmaMultFactor: 1.
FixMean: 0
MeanFile: ''
MassMin: [ 1.74, 1.74, 1.74, 1.74, 1.74, 1.74, 1.74, 1.74, 1.74, 1.74, 1.74, 1.74, 1.74, 1.74, 1.74, 1.74, 1.70, 1.70, 1.70, 1.70, 1.70 ] 
MassMax: [ 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00 ]
Rebin: [20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
InclSecPeak: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
SigmaSecPeak: []
SigmaFileSecPeak: ''
SigmaMultFactorSecPeak: 1.
FixSigmaToFirstPeak: 0
UseLikelihood: 1
BkgFunc: [ 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo' ]
SgnFunc: [ 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus' ]
BkgFuncVn: ['kLin', 'kLin', 'kPol2', 'kLin', 'kLin', 'kLin', 'kLin', 'kLin', 'kLin', 'kLin', 'kLin', 'kLin', 'kLin', 'kLin', 'kLin', 'kLin', 'kLin', 'kLin', 'kLin', 'kLin', 'kLin' ]
ReflFunc: "2gaus"
FixSigmaRatio: 0 # used only if SgnFunc = k2GausSigmaRatioPar
SigmaRatioFile: ""
BoundMean: 0 # 0: Do not set limits on mean range, 1: the mean is set to be between MassMin[i] and MassMax[i]

# efficiency
eff_filename: 'task_output.root'

# cut variation
cut_variation:
       corr_bdt_cut:
              bkg_max: [0.001, 0.001, 0.001, 0.001, 0.001, 0.002, 0.002, 0.01, 0.08, 0.1]
              sig: # the max value is not contained in the range
                     min: [0.1, 0.2, 0.15, 0.15, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]
                     max: [0.92, 0.92, 0.92, 0.92, 0.92, 0.92, 0.92, 0.92, 0.92, 0.92]
                     step: [0.15, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04]
       uncorr_bdt_cut:
            bkg_max: # max probability for bkg, one for each pt bin
                - [0.001, 0.001, 0.001, 0.008, 0.0006] # pt 1
                - [0.001, 0.001, 0.001, 0.008, 0.0006] # pt 2
                - [0.001, 0.001, 0.001, 0.008, 0.0006] # pt 3
                - [0.001, 0.001, 0.001, 0.008, 0.0006] # pt 4
                - [0.001, 0.001, 0.001, 0.008, 0.0006] # pt 5
                - [0.001, 0.001, 0.001, 0.008, 0.0006] # pt 6
            sig:
                - min: [0.00, 0.30, 0.45, 0.70, 0.97] # min pt 1
                  max: [0.30, 0.45, 0.70, 0.97, 1.00] # max pt 1
                - min: [0.00, 0.30, 0.45, 0.70, 0.97] # min pt 2
                  max: [0.30, 0.45, 0.70, 0.97, 1.00] # max pt 2
                - min: [0.00, 0.30, 0.45, 0.70, 0.97] # min pt 3
                  max: [0.30, 0.45, 0.70, 0.97, 1.00] # max pt 3
                - min: [0.00, 0.30, 0.45, 0.70, 0.97] # min pt 4
                  max: [0.30, 0.45, 0.70, 0.97, 1.00] # max pt 4
                - min: [0.00, 0.30, 0.45, 0.70, 0.97] # min pt 5
                  max: [0.30, 0.45, 0.70, 0.97, 1.00] # max pt 5
                - min: [0.00, 0.30, 0.45, 0.70, 0.97] # min pt 6
                  max: [0.30, 0.45, 0.70, 0.97, 1.00] # max pt 6
       

# these configurations are available only for the MC
#_______________________________________________________________________________________________________________________
## axes for the MC from Dtask
### for D0: mass-2 pt-3 bdt_bkg-0 bdt_prompt-6 bdt_nonprompt-1
axes_mc: {mass: 3,
              pt: 4,
              bdt_bkg: 0,
              bdt_sig: 2}

#_______________________________________________________________________________________________________________________
## used for computting pT weights
Bspecie: Ball # only surport for Ball and BsBmix, empty means no B pt weights

rebin: 1
smooth: 100

shapes:
    D:
        # fonll is mandatory
        fonll: /media/wuct/wulby/ALICE/AnRes/fonll_pythia_beautyFFee_charmhadrons_5dot5tev_y0dot5.root
        tamu:
              enabled: true
              file: /home/wuct/ALICE/local/DmesonAnalysis/models/tamu/PromptD0_TAMU_RAA_5TeV_3050.txt
        #TODO: data shape for Ds?
    B:
        # fonll is mandatory
        fonll: /media/wuct/wulby/ALICE/AnRes/fonll_pythia_beautyFFee_charmhadrons_5dot5tev_y0dot5.root
        tamu:
            enabled: true
            file: 
                B: /home/wuct/ALICE/local/DmesonAnalysis/models/tamu/B_TAMU_RAA_5TeV_3050.txt
                Bs: ''
ptWeights_path: ''

#_______________________________________________________________________________________________________________________
## used for the MC in projection_thnsparse.py
### for D0, D+, Ds
MC_filename: [path/to/MCfile.root]
dirname: hf-task-d0
sparsenameAll: null
sparsenamePrompt: hBdtScoreVsMassVsPtVsPtBVsYVsOriginVsD0Type
sparsenameFD: hBdtScoreVsMassVsPtVsPtBVsYVsOriginVsD0Type
sparsenameGenPrompt: hSparseAcc # also used in computting pT weights
sparsenameGenFD: hSparseAcc # also used in computting pT weights
### only for D0
enableRef: false #reflection for D0. 
# if `enableRef` is set to `true`,  and `ReflFile` is empty, then `ReflFile` will be aotumatically filled.
sparsenameRefl: hBdtScoreVsMassVsPtVsPtBVsYVsOriginVsD0Type
# if `ReflFile` is filled, then it will use the filled one
reflFile: ''
### only for Ds
enableSecPeak: no #no second peak for D+
sparsenamePromptSecPeak: null
sparsenameFDSecPeak: null
sparsenameGenPromptSecPeak: null
sparsenameGenFDSecPeak: null

#_______________________________________________________________________________________________________________________
## used for compute_frac_cut_var.py 
histoNameRaw: hRawYieldsSimFit # also ComputeV2vsFDFrac.py
histoNameEffPrompt: hEffPrompt
histoNameEffFD: hEffFD

minimisation:
    correlated: true # true --> fully correlated, false --> fully uncorrelated
    doRawYieldSmearing: false # whether to smear the yields with a poissonian error
    setseed: false # set the seed for Poissonian smearing
    applyEffVariation:
        enable: false
        relvariation: 0.05
        option: decreasing # available options: [upshift, downshift, decreasing, increasing]
        prompt: true
        feeddown: true

linearplot: 
    enable: true #enable linear plots NpromptVsNFD
    uncbands: false #enable upper/lower linear plots limits
    outfileformat: ['png', 'pdf', 'jpg'] # linear plot saved in different output formats (e.g. png, pdf, etc.). Plots are already saved in the ouput TFile

## used for ComputeV2vsFDFrac.py
histoNameV2: hvnSimFit
graphNameV2: gvnSimFit
histoNameFracFD: hFDFrac
histoNameFracPrompt: hPromptFrac